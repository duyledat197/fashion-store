version: "3.4"

services:
  generate_pb_go:
    image: gen-go
    build:
      context: ../
      target: protoc_gen_go
      dockerfile: ./development/proto.Dockerfile
    volumes:
      - "../:/app/"
    entrypoint: /app/development/gen-proto.sh

  generate_mock:
    image: vektra/mockery
    working_dir: /code
    volumes:
      - "../:/code:cached"
    entrypoint: [ "/usr/local/bin/mockery", "--all" ]

  postgres:
    container_name: postgres_container
    image: postgres
    build:
      context: ../
      target: postgres_container
      dockerfile: ./development/postgres.Dockerfile
    volumes:
      - ./init-databases:/docker-entrypoint-initdb.d
    env_file:
      - dev.env
    environment:
      PGDATA: /data/postgres
      POSTGRES_MULTIPLE_DATABASES: user-management,product-management,coupon-management
      POSTGRES_DB: ${DB_NAME}
      DATABASE_HOST: ${DB_HOST}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped

  migrate:
    image: golang:1.21.5
    volumes:
      - "../migration:/migration"
      - ".:/development"
    entrypoint:
      [
        /development/migrate.sh,
        "postgres",
        "${DB_PORT}",
        "${DB_USER}",
        "${DB_PASSWORD}"
      ]
    networks:
      - postgres

  adminer:
    image: adminer
    restart: always
    ports:
      - 3037:8080
    networks:
      - postgres

networks:
  postgres:
    driver: bridge
