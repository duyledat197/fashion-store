// Code generated by mockery v2.39.1. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// IDGenerator is an autogenerated mock type for the IDGenerator type
type IDGenerator struct {
	mock.Mock
}

// Int64 provides a mock function with given fields:
func (_m *IDGenerator) Int64() int64 {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Int64")
	}

	var r0 int64
	if rf, ok := ret.Get(0).(func() int64); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int64)
	}

	return r0
}

// String provides a mock function with given fields:
func (_m *IDGenerator) String() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for String")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// NewIDGenerator creates a new instance of IDGenerator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIDGenerator(t interface {
	mock.TestingT
	Cleanup(func())
}) *IDGenerator {
	mock := &IDGenerator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
