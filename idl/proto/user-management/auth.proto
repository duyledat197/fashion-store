syntax = "proto3";

package pb;
option go_package = "user-management/auth";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "validate/validate.proto";
import "google/protobuf/timestamp.proto";

service AuthService {
  rpc Register(RegisterRequest) returns (RegisterResponse) {
    option (google.api.http) = {
      post : "/v1/auth/register",
      body : "*"
    };
  }
  rpc Login(LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post : "/v1/auth/login",
      body : "*"
    };
  }

  rpc Logout(google.protobuf.Empty) returns (LogoutResponse) {
    option (google.api.http) = {
      post : "/v1/auth/logout",
      body : "*"
    };
  }

  rpc ForgotPassword(ForgotPasswordRequest) returns (ForgotPasswordResponse) {
    option (google.api.http) = {
      put : "/v1/auth/forgot-password",
      body : "*"
    };
  }

  rpc ResetPassword(ResetPasswordRequest) returns (ResetPasswordResponse) {
    option (google.api.http) = {
      put : "/v1/auth/reset-password",
      body : "*"
    };
  }
}
//////////////////////////////////////////////

message RegisterRequest {
  string user_name = 1;
  string password = 2;
  string repeat_password = 3;
  string name = 4;
  string email = 5 [ (validate.rules).string.email = true ];
}

message RegisterResponse { int64 user_id = 1; }

//////////////////////////////////////////////

message LoginRequest {
  string user_name = 1;
  string password = 2;
}

message LoginResponse {
  int64 user_id = 1;
  string access_token = 2;
}

//////////////////////////////////////////////

message LogoutResponse { google.protobuf.Timestamp logout_at = 1; }

//////////////////////////////////////////////
message ResetPasswordRequest {
  string email = 1;
  string reset_token = 2;
  string new_password = 3;
  string repeat_password = 4;
}
message ResetPasswordResponse {}

//////////////////////////////////////////////

message ForgotPasswordRequest { string email = 1; }
message ForgotPasswordResponse {}
